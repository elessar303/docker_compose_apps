version: '3.3'
services:
  #SonarQube
  sonarqube:
    image: sonarqube:8-community
    container_name: SonarQube
    restart: always
    depends_on:
      - sonardb
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonardb:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - ./data/sonarqube/sonarqube_data:/opt/sonarqube/data
      - ./data/sonarqube/sonarqube_extensions:/opt/sonarqube/extensions
      - ./logs/sonarqube/sonarqube_logs:/opt/sonarqube/logs
    networks:
      sonarnet:
        ipv4_address: ${IP_SONAR}
  #SonarQube Database
  sonardb:
    image: postgres:12
    container_name: SonarQubeDataBase
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - ./data/sonarqube/postgresql:/var/lib/postgresql
      - ./data/sonarqube/postgresql_data:/var/lib/postgresql/data
    networks:
      sonarnet:
        ipv4_address: ${IP_SONAR_DB}
  #SonarScannerCli
  sonar-scanner:
    image: sonarsource/sonar-scanner-cli
    container_name: SonnarScannerCli
    restart: on-failure
    depends_on:
      - sonarqube
    environment:
      SONAR_HOST_URL: http://sonarqube:9000
      SONAR_LOGIN: ${PROYECT_KEY_SONAR}
    volumes:
      - ${SCANNER_SONAR_DIR}:/usr/src
    networks:
      - sonarnet
networks:
  sonarnet:
      ipam:
          driver: default
          config:
              - subnet: ${SUBNET}